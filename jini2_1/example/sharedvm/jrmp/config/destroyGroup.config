/* Configuration file containing entries used to configure the
 * SharedGroupImpl when using the ServiceStarter framework to
 * destroy an activation group VM in which JRMP is used for
 * remote communication.
 *
 * The ServiceStarter framework destroys the activation group
 * VM by registering a SharedGroupImpl object with the 
 * activation system (like any other activatable service) and
 * activating that object in the VM to be destroyed. The
 * ServiceStarter then invokes that object's destroyVM()
 * method, ultimately executing a call to System.exit() which
 * destroys the VM in which the object (as well as any other
 * objects) is running.
 */
import net.jini.jrmp.JrmpExporter;
import net.jini.security.BasicProxyPreparer;
import java.rmi.activation.ActivationID;

com.sun.jini.start {

    /* Exporter(s) -------------------------------------------------------------- */

    /* Because the ServiceStarter framework registers an instance of
     * SharedGroupImpl with the activation system, that object must be
     * exported (see SharedGroupImpl.doInit()). The required exporter
     * is specified below.
     */
    exporter = new JrmpExporter( (ActivationID)$data,0 );

    /* Proxy Preparer(s) -------------------------------------------------------- */

    /* The SharedGroupImpl interacts with the activation framework through
     * a proxy to the activation system. As such, the SharedGroupImpl should
     * prepare that proxy before attempting to use it. A preparer for that
     * proxy is specifed below.
     */
    activationSystemPreparer = new BasicProxyPreparer();

}//end com.sun.jini.start

