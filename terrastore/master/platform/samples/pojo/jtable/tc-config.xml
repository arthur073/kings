<?xml version="1.0" encoding="UTF-8"?>
<!--

All content copyright Terracotta, Inc., unless otherwise indicated. All rights reserved.

-->
<tc:tc-config xmlns:tc="http://www.terracotta.org/config"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.terracotta.org/schema/terracotta-6.xsd">
  <!-- Server is colocated with client and DSO is listening on
       default port (9510). -->
  <servers>
    <server host="%i" name="sample"/>
  </servers>

  <!-- Tell DSO where to put the generated client logs.
       See the Terracotta Configuration Guide and Reference for additional
       information. -->
  <clients>
    <logs>terracotta/client-logs/pojo/jtable/%D</logs>
  </clients>

  <application>
    <dso>
      <!-- The app requires these custom objects/classes to be shared - the following declarations
           tell DSO which ones they are. When the app runs under DSO, instances of these classes
           will broadcast changes in their state.

           A best practice (and an MVC pattern) when writing an app that you intend to cluster via Terracotta is to group the 
           classes you want to share under a single package. This makes the list of instrumented classes more concise.

           The following <include> instruments all of the classes found in all of the
           packages of our sample app. -->
      <instrumented-classes>
        <include>
          <class-expression>demo.jtable..*</class-expression>
        </include>
      </instrumented-classes>

      <!-- We declare the field 'demo.jtable.Main.model' a root, making it 
           available to all instances of our app that run via DSO. -->
      <roots>
        <root>
          <field-name>demo.jtable.Main.model</field-name>
        </root>
      </roots>
    </dso>
  </application>
</tc:tc-config>
