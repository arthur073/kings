import net.jini.security.BasicProxyPreparer;
import net.jini.core.discovery.LookupLocator;
import net.jini.jrmp.JrmpExporter;
import java.rmi.activation.ActivationID;
import net.jini.discovery.ConstrainableLookupLocator;
import net.jini.constraint.BasicMethodConstraints;
import net.jini.constraint.BasicMethodConstraints.MethodDesc;
import net.jini.core.constraint.InvocationConstraint;
import net.jini.core.constraint.InvocationConstraints;
import com.sun.jini.discovery.MulticastTimeToLive;

multicast {
    private ttl = 1;
}

com.sun.jini.fiddler {
    locatorConstraints = net.jini.discovery.LookupDiscovery.discoveryConstraints;
    activationIdPreparer = new BasicProxyPreparer();
    activationSystemPreparer = new BasicProxyPreparer();
    listenerPreparer = new BasicProxyPreparer();
}

net.jini.lookup.JoinManager {
    registrarPreparer = new BasicProxyPreparer();
    registrationPreparer = new BasicProxyPreparer();
    serviceLeasePreparer = new BasicProxyPreparer();
}

net.jini.discovery.LookupDiscovery {
    registrarPreparer = new BasicProxyPreparer();
    discoveryConstraints = new BasicMethodConstraints(
        new MethodDesc[] {
            new MethodDesc(new InvocationConstraints(
                new InvocationConstraint[] {
                    new MulticastTimeToLive(multicast.ttl)
                },
                null
            ))
        }
    );
}

net.jini.discovery.LookupLocatorDiscovery {
    registrarPreparer = new BasicProxyPreparer();
}

exporter {
    name = "com.sun.jini.fiddler.serverExporter";
    activatableExporter = new JrmpExporter((ActivationID) $data, 0);
    persistentExporter = new JrmpExporter();
    transientExporter = persistentExporter;
}

