/* Default configuration file for the ServiceStarter framework when
 * it starts a service in a shared activation group VM in which JERI
 * is used for remote communication.
 *
 * This configuration can be used when creating the shared activation
 * group VM itself. That is, it can be specified as the configuration
 * input to com.sun.jini.start.SharedActivationGroupDescriptor.create().
 * To use this configuration for that purpose, this file should be
 * specified in the following way:
 *
 *   sharedGroup.starterConfiguration=starter/starter.config
 *
 * This configuration can also be used when creating a service, or when
 * creating the SharedGroupImpl (which is viewed by the test harness
 * framework as a service of sorts). That is, this configuration
 * can be specified as the configuration that is input to
 * com.sun.jini.start.SharedActivatableServiceDescriptor.create().
 * To use this configuration for that purpose, this file should be
 * specified in the following way:
 *
 *   sharedGroupImpl.starterConfiguration=starter/starter.config
 *
 * For either case, a call to ServiceStarter.getActivationSystem() is
 * ultimately made, which requires that the proxy to the activation
 * system be prepared. Thus, this file must specify an entry for
 * activationSystemPreparer.
 */
import net.jini.security.BasicProxyPreparer;

com.sun.jini.start {
    activationSystemPreparer = new BasicProxyPreparer();
}//end com.sun.jini.start
