/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Configuration file for starting Reggie with Kerberos */

import com.sun.jini.config.ConfigUtil;
import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.start.ServiceDescriptor;
import net.jini.url.httpmd.HttpmdUtil;

com.sun.jini.start {

    private ourHost = ConfigUtil.getHostName();
    private serverURL  = ConfigUtil.concat(
	new String[] { "httpmd://", ourHost, ":8080/reggie-dl.jar;sha=0"});
    private serverCodebase = HttpmdUtil.computeDigestCodebase("..${/}..${/}lib-dl", serverURL);

    private jskURL = ConfigUtil.concat(
	new String[] { "httpmd://", ourHost, ":8080/jsk-dl.jar;sha=0"});
    private jskCodebase = HttpmdUtil.computeDigestCodebase("..${/}..${/}lib-dl", jskURL);

    private static codebase = ConfigUtil.concat(
	new String[] { serverCodebase," ",jskCodebase } );

    private static policy =    "config${/}krb-reggie.policy";
    private static classpath = 
	"lib${/}mdprefld.jar${path.separator}..${/}..${/}lib${/}reggie.jar";
    private static config =    "config${/}krb-reggie.config";

    static serviceDescriptors = new ServiceDescriptor[] {
	new NonActivatableServiceDescriptor(
	    codebase, policy, classpath,
	    "com.sun.jini.reggie.TransientRegistrarImpl",
	    new String[] { config }
	)
    };

}//end com.sun.jini.start
